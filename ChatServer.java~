/**
*	UDP Chat Server Program
*	Act as a intermediate portal for chat between two clients
*
* Listens on a UDP port until two cients make a connection
*	Receives a line of input from the first client and sends it to second client and vice versa
*	Ends connection when either one of client says "Goodbye"
*
* Partner: Carlos Leyva
*	@author: Hein Thu
@	version: 1.1
*/

import java.io.*;
import java.net.*;

class ChatServer {
  public static void main(String args[]) throws Exception{

    DatagramSocket serverSocket = null;

	try{
			serverSocket = new DatagramSocket(9876);
	}
	catch(Exception e){
	  System.out.println("Failed to open UDP socket");
		System.exit(0);
	}
	
  byte[] receiveData = null;
  byte[] sendData  = null;
  DatagramPacket receivePacket=null;
  DatagramPacket sendPacket=null;
  InetAddress firstIPAddress= null;
  InetAddress secondIPAddress=null;
  int firstPort= 0;
  int secondPort=0;
  String incoming="";
  String outgoing="";
  boolean isFirst=false;
  
  while(!isFirst){
        receiveData = new byte[1024];
        sendData  = new byte[1024];
        receivePacket = new DatagramPacket(receiveData, receiveData.length);
        serverSocket.receive(receivePacket);

        incoming = new String(receivePacket.getData());

        fisrtIPAddress = receivePacket.getAddress();
        firstPort = receivePacket.getPort();

        if(!incoming.length()>=6 || !incoming.substring(0,6).equals("HELLO "))
          outgoing= "300 Hello command not initiated";
        else if(!(incoming.length()==9 && incoming.substring(6,9).equals("Red"))||!(incoming.length()==10 && incoming.substring(6,9).equals("Blue")))
          outgoing= "300 Username not recognized"
        else{
          isFirst=true;
          outgoing="100";
        }
        sendData = outgoing.getBytes();

        sendPacket = new DatagramPacket(sendData, sendData.length, firstIPAddress, firstPort);

        serverSocket.send(sendPacket);
      }

      while(true)
        {
          receivePacket = new DatagramPacket(receiveData, receiveData.length);
          serverSocket.receive(receivePacket);
          String sentence = new String(receivePacket.getData());

          InetAddress IPAddress = receivePacket.getAddress();

          int port = receivePacket.getPort();

          String capitalizedSentence = sentence.toUpperCase();

          sendData = capitalizedSentence.getBytes();

          DatagramPacket sendPacket =
             new DatagramPacket(sendData, sendData.length, IPAddress,
                               port);

          serverSocket.send(sendPacket);
        }
    }
}
